# -*- coding: utf-8 -*-
"""sem_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Evy2KWZqBGdAp-TFyR7Eqtup_Oirufd-

Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх
решкой, а некоторые – гербом. Определите минимальное число
монеток, которые нужно перевернуть, чтобы все монетки были
повернуты вверх одной и той же стороной. Выведите минимальное
количество монет, которые нужно перевернуть.

5 -> 1 0 1 1 0

2
"""

n = int(input('Cколько монет на столе?\n'))
coins = []
count = 0
print('Введите монеты, 0 - решка, 1 (и все кроме 0) - орел.')
while count < n:
  coin = input(f'{count + 1}-я монета: \n')
  coins += coin
  count += 1

print(coins)

eagle, tails = 0, 0
for i in range(len(coins)):
  if coins[i] == '0':
    tails += 1
  else:
    eagle +=1

print(f'{eagle = }, {tails = }')
min_ = eagle if eagle < tails else tails
print(f'Нужно перевернуть монет: {min_}.')

"""Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя –
школьница. Петя помогает Кате по математике. Он задумывает два
натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для
этого Петя делает две подсказки. Он называет сумму этих чисел S и их
произведение P. Помогите Кате отгадать задуманные Петей числа.

4, 4 -> 2, 2

5, 6 -> 2, 3
"""

from math import sqrt
s = int(input('Введите сумму загаданных чисел: \n'))
p = int(input('Введите произведение загаданных чисел: \n'))
x = s - (s - (sqrt(s ** 2 - 4 * p))) / 2
y = (s - (sqrt(s ** 2 - 4 * p))) / 2
print(x, y)

"""Задача 14: 

Требуется вывести все целые степени двойки (т.е. числа
вида 2k
), не превосходящие числа N.


10 -> 1 2 4 8
"""

N = int(input('Введите число N:\n'))
result = 0
count = 0
degrees_of_2 = {}
while result < N:
  degrees_of_2[count] = result
  result = 2 ** count
  count += 1
print(f'{degrees_of_2 = }')